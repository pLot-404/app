{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://app/./src/modules/Game.ts","webpack://app/./src/modules/MultiEventListener.ts","webpack://app/./src/modules/Sprite.ts","webpack://app/./src/App.ts"],"sourcesContent":["import Sprite from './Sprite';\nimport MultiEventListener from './MultiEventListener';\n\ninterface keyEvent {\n  code: string[];\n  push: boolean;\n}\n\ninterface key {\n  [index: string]: keyEvent;\n}\n\nclass Game {\n  public canvas: HTMLCanvasElement;\n\n  public objs: Sprite[];\n\n  public keyMap: key;\n\n  constructor(width = 320, height = 600) {\n    this.canvas = document.createElement('canvas');\n    const root = document.getElementById('root');\n    if (root) root.appendChild(this.canvas);\n    [this.canvas.width, this.canvas.height] = [width, height];\n\n    this.objs = [];\n\n    this.keyMap = {};\n  }\n\n  resize(width = 320, height = 600) {\n    [this.canvas.width, this.canvas.height] = [width, height];\n  }\n\n  start() {\n    this.mainloop();\n\n    MultiEventListener(window, 'keydown keyup', (e: Event) => {\n      e.preventDefault();\n      for (const i in this.keyMap) {\n        if (this.keyMap && Object.prototype.hasOwnProperty.call(this.keyMap, i))\n          switch (e.type) {\n            case 'keydown':\n              break;\n            default:\n              return;\n          }\n      }\n    });\n  }\n\n  mainloop() {\n    const ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n    ctx.fillStyle = '#000';\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    for (let i = 0; i < this.objs.length; i++) {\n      this.objs[i].update(this.canvas);\n    }\n\n    requestAnimationFrame(this.mainloop.bind(this));\n  }\n\n  add(obj: Sprite) {\n    this.objs = this.objs.concat([obj]);\n  }\n\n  setKeyBind(name: string, codes: string[]) {\n    this.keyMap[name] = {\n      code: codes,\n      push: false,\n    };\n  }\n}\n\nexport default Game;\n","const MultiEventListener = (\n  element: Element | null | Window,\n  eventNames: string,\n  listener: (e: Event) => void,\n): void => {\n  const target = element as EventTarget;\n  const events = eventNames.split(' ');\n  events.forEach((event: string) => target.addEventListener(event, listener, false));\n};\n\nexport default MultiEventListener;\n","class Sprite {\n  img: HTMLImageElement;\n\n  constructor(\n    img: string,\n    public x: number = 0,\n    public y: number = 0,\n    public width: number = 40,\n    public height: number = 40,\n    public index: number = 0,\n  ) {\n    this.img = new Image();\n    this.img.src = img;\n  }\n\n  update(canvas: HTMLCanvasElement) {\n    this.render(canvas);\n  }\n\n  render(canvas: HTMLCanvasElement) {\n    if (\n      this.x < -1 * this.width ||\n      this.x > canvas.width ||\n      this.y < -1 * this.height ||\n      this.y > canvas.height\n    ) {\n      return;\n    }\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    const xIndex = this.index % (this.img.width / this.width);\n    const yIndex = Math.floor(this.index / (this.img.width / this.width));\n    ctx.drawImage(\n      this.img,\n      this.width * xIndex,\n      this.height * yIndex,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n    );\n  }\n}\n\nexport default Sprite;\n","import Game from './modules/Game';\nimport Sprite from './modules/Sprite';\nimport './css/Style.scss';\n\nconst codes = {\n  up: ['KeyW', 'Numpad8', 'ArrowUp'], // w,テンキー8,↑\n  down: ['KeyS', 'Numpad2', 'ArrowDown'], // s,テンキー2,↓\n  right: ['KeyD', 'Numpad6', 'ArrowRight'], // d,テンキー6,→\n  left: ['KeyA', 'Numpad4', 'ArrowLeft'], // a,テンキー4,←\n  confirm: ['Enter', 'KeyZ'], // Enter,z\n  discard: ['Escape', 'KeyX'], // Esc,x\n};\n\nwindow.addEventListener('load', () => {\n  const game = new Game(window.innerWidth * 0.95, window.innerHeight * 0.95);\n  for (const i in codes) {\n    if (codes && Object.prototype.hasOwnProperty.call(codes, i)) {\n      game.setKeyBind(i, codes[i]);\n    }\n  }\n\n  console.log(game.keyMap);\n\n  window.addEventListener('resize', () => {\n    game.resize(window.innerWidth * 0.95, window.innerHeight * 0.95);\n  });\n\n  const school = new Sprite('/img/schoolinside.png');\n  game.add(school);\n\n  game.start();\n});\n"],"names":["width","height","this","canvas","document","createElement","root","getElementById","appendChild","objs","keyMap","resize","start","element","listener","target","mainloop","window","e","i","preventDefault","Object","prototype","hasOwnProperty","call","type","split","forEach","event","addEventListener","ctx","getContext","fillStyle","fillRect","length","update","requestAnimationFrame","bind","add","obj","concat","setKeyBind","name","codes","code","push","img","x","y","index","Image","src","render","xIndex","yIndex","Math","floor","drawImage","up","down","right","left","confirm","discard","game","innerWidth","innerHeight","console","log","school"],"sourceRoot":""}